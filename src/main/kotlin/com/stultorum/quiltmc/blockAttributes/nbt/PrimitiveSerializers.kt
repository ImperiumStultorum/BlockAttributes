//
//            /--------------------------\
//            |                          |
//            | GENERATED BY KOTLIN POET |
//            |                          |
//            \--------------------------/
//         
@file:Suppress("RedundantVisibilityModifier")

package com.stultorum.quiltmc.blockAttributes.nbt

import org.quiltmc.qkl.library.nbt.NbtCompound
import org.quiltmc.qkl.library.nbt.nbt
import net.minecraft.nbt.NbtCompound as NbtCompoundType

public class StringCompoundSerializer : CompoundSerializer<String>() {
  override fun serialize(obj: String): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): String = nbt.getString("val")
}

public class BooleanCompoundSerializer : CompoundSerializer<Boolean>() {
  override fun serialize(obj: Boolean): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): Boolean = nbt.getBoolean("val")
}

public class ByteCompoundSerializer : CompoundSerializer<Byte>() {
  override fun serialize(obj: Byte): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): Byte = nbt.getByte("val")
}

public class ShortCompoundSerializer : CompoundSerializer<Short>() {
  override fun serialize(obj: Short): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): Short = nbt.getShort("val")
}

public class IntCompoundSerializer : CompoundSerializer<Int>() {
  override fun serialize(obj: Int): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): Int = nbt.getInt("val")
}

public class LongCompoundSerializer : CompoundSerializer<Long>() {
  override fun serialize(obj: Long): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): Long = nbt.getLong("val")
}

public class FloatCompoundSerializer : CompoundSerializer<Float>() {
  override fun serialize(obj: Float): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): Float = nbt.getFloat("val")
}

public class DoubleCompoundSerializer : CompoundSerializer<Double>() {
  override fun serialize(obj: Double): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): Double = nbt.getDouble("val")
}

public class ByteArrayCompoundSerializer : CompoundSerializer<ByteArray>() {
  override fun serialize(obj: ByteArray): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): ByteArray = nbt.getByteArray("val")
}

public class IntArrayCompoundSerializer : CompoundSerializer<IntArray>() {
  override fun serialize(obj: IntArray): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): IntArray = nbt.getIntArray("val")
}

public class LongArrayCompoundSerializer : CompoundSerializer<LongArray>() {
  override fun serialize(obj: LongArray): NbtCompoundType = NbtCompound(Pair("val", obj.nbt))

  override fun deserialize(nbt: NbtCompoundType): LongArray = nbt.getLongArray("val")
}
